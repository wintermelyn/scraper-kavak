name: Install Python env

inputs:
  working-directory:
    description: 'Directorio donde est√° el pyproject.toml'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up python
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: ${{ inputs.working-directory }}/.venv
        key: venv-${{ runner.os }}-${{ hashFiles(format('{0}/poetry.lock', inputs.working-directory)) }}-${{ hashFiles('.github/actions/install-env/action.yml') }}-${{ steps.setup-python.outputs.python-version }}

    - name: Load cached .local
      id: cached-dotlocal
      uses: actions/cache@v4
      with:
        path: ~/.local
        key: dotlocal-${{ runner.os }}-${{ hashFiles('.github/actions/install-env/action.yml') }}-${{ steps.setup-python.outputs.python-version }}

    - name: Install Python poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
        virtualenvs-path: ${{ inputs.working-directory }}/.venv
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

    - name: Install dependencies
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction

    - name: Activate environment (no-op)
      shell: bash
      run: echo "env activated (not used between steps)"
